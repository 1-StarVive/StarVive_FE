import type { Metadata } from "next";
import { Geist, Geist_Mono } from "next/font/google";
import "./globals.css";
import ImperativeUIProvider from "@/components/imperative-ui/imperative-ui-provider";
import ReactQueryProvider from "@/lib/react-query-provider";
import { Suspense } from "react";
import Loading from "@/components/loading";
import { ErrorBoundary } from "@/components/error-boundary";
import { ReactQueryStreamedHydration } from "@tanstack/react-query-next-experimental";

const geistSans = Geist({
  variable: "--font-geist-sans",
  subsets: ["latin"],
});

const geistMono = Geist_Mono({
  variable: "--font-geist-mono",
  subsets: ["latin"],
});

export const metadata: Metadata = {
  title: "Create Next App",
  description: "Generated by create next app",
};

export default function RootLayout({
  children,
}: Readonly<{
  children: React.ReactNode;
}>) {
  return (
    <html lang="en">
      <body className={`${geistSans.variable} ${geistMono.variable} antialiased`}>
        <ReactQueryProvider>
          <ReactQueryStreamedHydration>
            <Suspense fallback={<Loading />}>
              <ErrorBoundary>{children}</ErrorBoundary>
            </Suspense>
            <ImperativeUIProvider />
          </ReactQueryStreamedHydration>
        </ReactQueryProvider>
      </body>
    </html>
  );
}
